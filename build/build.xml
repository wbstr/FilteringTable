<?xml version="1.0" encoding="UTF-8"?>

<project name="FilteringTable7" basedir="../" default="all" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- Main target that does all -->
	<target name="all" depends="clean-all, compile, widgetset, javadoc, sources-jar, package-jar, package-zip, demo.war, cleanup" description="Builds the add-on JAR, add-on ZIP, demo application WAR and creates javadocs. Cleans up temporary files afterwards."/>

	<!-- Non-project specific settings. -->
	<property file="build/build.properties" />
	<property name="configure.libs" value="" />

	<!-- ================================================================== -->
	<!-- Initialization                                                     -->
	<!-- ================================================================== -->

	<!-- Clean old compilation results. -->
	<target name="clean-all" description="Deletes all existing build results.">
		<delete dir="${result-path}" includes="**/*" followsymlinks="false" includeemptydirs="true" defaultexcludes="false" failonerror="false" />
	</target>

	<!-- Initialization -->
	<target name="init" description="Initializes variables necessary for the build and fetches IVY dependencies.">
		<ivy:cachepath pathid="ivy.deps" conf="widgetset-compile" />
		<property name="base-name" value="${addon.name}-${version}" />
		<property name="jar.name" value="${base-name}.jar" />
		<property name="jar.path" value="${result-path}/${jar.name}" />
		<ivy:retrieve pattern="${temp.lib.dir}/[artifact]-[type]-[revision].[ext]" conf="widgetset-compile" />
	</target>

	<!-- ================================================================== -->
	<!-- Compilation                                                        -->
	<!-- ================================================================== -->

	<target name="compile" depends="init" description="Compiles server-side Java files.">
		<echo>Compiling server side...</echo>
		<property name="result.classes" value="${result-path}/war/WEB-INF/classes" />
		<mkdir dir="${result.classes}" />
		<javac includeantruntime="false" listfiles="yes" verbose="yes" destdir="${result.classes}" target="1.6" source="1.6" debug="true">
			<classpath refid="ivy.deps" />
			<src path="src" />
		</javac>
	</target>

	<!-- Compile client-side Java -->
	<target name="widgetset" depends="init" description="Compiles the add-on widgetset.">
		<echo>Compiling widgetset...</echo>
		<java classname="com.google.gwt.dev.Compiler" failonerror="yes" fork="yes" maxmemory="1024m">
			<arg value="-war" />
			<arg value="${webcontent.dir}/${webcontent.widgetset.dir}" />
			<arg value="${addon.widgetset}" />
			<arg value="-logLevel" />
			<arg value="TRACE" />
			<jvmarg value="-Xss1024k" />
			<jvmarg value="-Xmx1024M" />
			<jvmarg value="-Djava.awt.headless=true" />
			<classpath refid="ivy.deps" />
			<classpath>
				<path path="src" />
				<path path="${basedir}/${result-path}/war/WEB-INF/classes" />
			</classpath>
		</java>
	</target>

	<!-- ================================================================== -->
	<!-- Packaging                                                          -->
	<!-- ================================================================== -->

	<!-- Create javadoc -->
	<target name='javadoc' description="Creates Javadoc for the add-on.">
		<javadoc use='true' author='true' version='true' access='package' sourcepath='src' packagenames='*.*' destdir='${result-path}/javadoc' windowtitle='${addon.title} ${version}' noqualifier='java.*:javax.*:com.sun.*' linksource='true'>
			<classpath refid='ivy.deps' />
			<link href='http://java.sun.com/javase/6/docs/api/' />
			<header>
				<![CDATA[<h1>${app.name} ${app.version}</h1>]]></header>
	</javadoc>
</target>

<!-- Create sources JAR -->
<target name="sources-jar" description="Creates a JAR file containing the sources of the add-on.">
	<jar basedir="src" destfile="${result-path}/${addon.name}-${version}-sources.jar" />
</target>

<!-- Create the JAR package [Note: JAR is not functional by itself]. -->
<target name="package-jar" depends="compile" unless="run.no-package-jar" description="Creates the add-on JAR package.">
	<echo>Creating ${addon.title} JAR...</echo>
	<jar jarfile="${jar.path}" compress="true">
		<manifest>
			<attribute name="Vaadin-Package-Version" value="1" />
			<attribute name="Vaadin-Widgetsets" value="${addon.widgetset}" />
			<attribute name="Implementation-Title" value="${addon.title}" />
			<attribute name="Implementation-Version" value="${version}" />
			<attribute name="Implementation-Vendor" value="${addon.vendor}" />
		</manifest>
		<!-- The built server-side classes and the widget set class are here. -->
		<fileset dir="${result.classes}">
			<patternset>
				<exclude name="**/demo/**" />
			</patternset>
		</fileset>
		<!-- Include sources. -->
		<fileset dir="src">
			<patternset>
				<exclude name="**/demo/**" />
			</patternset>
		</fileset>
		<fileset dir="WebContent">
			<patternset>
				<exclude name="**/VAADIN/**" />
				<exclude name="**/WEB-INF/**" />
			</patternset>
		</fileset>
	</jar>
</target>

<!-- Create the ZIP distribution package. -->
<target name="package-zip" depends="package-jar" description="Creates the add-on ZIP package which includes the add-on JAR, javadocs and the PopupButton dependency JAR.">
	<echo>Creating ${addon.title} ZIP...</echo>
	<property name="zip.name" value="${result-path}/${addon.name}-${version}.zip" />
	<!-- Make the zip manifest -->
	<mkdir dir="${result-path}/META-INF" />
	<echo file="${result-path}/META-INF/MANIFEST.MF">Vaadin-Addon: ${addon.name}-${version}/${jar.name}
Vaadin-Package-Version: 1
Implementation-Title: ${addon.title}
Implementation-Version: ${version}
Implementation-Vendor: ${addon.vendor}
Vaadin-Dependency: ${dependency.popupbutton}
	       </echo>
	<zip destfile="${zip.name}">
		<zipfileset dir="${result-path}" includes="META-INF/MANIFEST.MF" />
		<!-- The add-on library itself -->
		<zipfileset prefix="${addon.name}-${version}" file="${result-path}/${jar.name}" />
		<!-- Dependency: PopupButton -->
		<zipfileset file="${temp.lib.dir}/${dependency.popupbutton}" />
		<!-- Javadoc -->
		<zipfileset prefix="javadoc" dir="${result-path}/javadoc" />
		<!-- Sources -->
		<zipfileset file="${result-path}/${addon.name}-${version}-sources.jar" />
	</zip>
</target>

<!-- Create demo application WAR -->
<target name="demo.war" depends="package-jar" description="Creates the demo application WAR file.">
	<echo>Creating ${addon.title} Demo Application WAR...</echo>
	<property name="war.path" value="${result-path}/${addon.name}-v7.war" />
	<war destfile="${war.path}" webxml="${web.xml.location}">
		<classes dir="${result.classes}" />
		<lib file="${jar.path}" />
		<lib dir="${temp.lib.dir}" />
		<fileset dir="${webcontent.dir}">
			<patternset>
				<include name="${webcontent.widgetset.dir}${addon.widgetset}/**/*" />
			</patternset>
		</fileset>
	</war>
</target>

<target name="cleanup" description="Deletes temporary files created during the build process.">
	<delete dir="${temp.lib.dir}" followsymlinks="false" includeemptydirs="true" defaultexcludes="false" failonerror="false" />
	<delete dir="${result-path}/war" followsymlinks="false" includeemptydirs="true" defaultexcludes="false" failonerror="false" />
	<delete dir="${result-path}/META-INF" followsymlinks="false" includeemptydirs="true" defaultexcludes="false" failonerror="false" />
	<delete dir="${result-path}/javadoc" followsymlinks="false" includeemptydirs="true" defaultexcludes="false" failonerror="false" />
</target>
</project>